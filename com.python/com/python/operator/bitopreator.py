# coding=utf-8
"""
运算符    描述    实例
&    按位与运算符    (a & b) 输出结果 12 ，二进制解释： 0000 1100
|    按位或运算符    (a | b) 输出结果 61 ，二进制解释： 0011 1101
^    按位异或运算符     (a ^ b) 输出结果 49 ，二进制解释： 0011 0001
~    按位取反运算符     (~a ) 输出结果 -61 ，二进制解释： 1100 0011， 在一个有符号二进制数的补码形式。
<<    左移动运算符     a << 2 输出结果 240 ，二进制解释： 1111 0000
>>    右移动运算符    a >> 2 输出结果 15 ，二进制解释： 0000 1111
"""
a = 60            # 60 = 0011 1100 
b = 13            # 13 = 0000 1101 
c = 0

c = a & b;        # 12 = 0000 1100
print ("Line 1 - Value of c is ", c)

c = a | b;        # 61 = 0011 1101 
print ("Line 2 - Value of c is ", c)

c = a ^ b;        # 49 = 0011 0001
print ("Line 3 - Value of c is ", c)

c = ~a;           # -61 = 1100 0011
print ("Line 4 - Value of c is ", c)

c = a << 2;       # 240 = 1111 0000
print ("Line 5 - Value of c is ", c)

c = a >> 2;       # 15 = 0000 1111
print ("Line 6 - Value of c is ", c)